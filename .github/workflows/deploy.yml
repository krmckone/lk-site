name: Deploy

on:
  push:
    branches: [ main ]

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

    - name: Build Static
      run: go run cmd/lk-site/main.go
    
    - name: Check HTML
      uses: anishathalye/proof-html@v2.0.2
      with:
        directory: ./build
        check_favicon: false
    - name: Upload Static Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: site
        path: ./build

  deploy:
    name: Deploy Static Site
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Download Static Site
      uses: actions/download-artifact@v3
      with:
        name: site
        path: ~/site
    - name: Check out code at the deploy location
      uses: actions/checkout@v2
      with:
        token: ${{ secrets.GH_PAT }}
        repository: 'krmckone/krm-site'
    - name: deploy
      shell: bash
      env:
        GITHUB_TOKEN: ${{ secrets.GH_PAT }}
      run: |
        releaseDate=$(date +%m-%d-%y-%H:%M:%S)
        lkSiteReleaseHash=$(git rev-parse --short $GITHUB_SHA)
        git --version
        git config --global user.name "Kaleb's GitHub Actions Bot from lk-site"
        git config --global user.email "20476319+krmckone@users.noreply.github.com"
        git checkout -b "lk-site-deploy-${{ github.ref_name }}-$lkSiteReleaseHash"
        ls ~/site
        cp -r ~/site/* ./
        git add .
        commitResult=$(git commit -m "New Release krmckone/lk-site@$lkSiteReleaseHash $releaseDate")
        echo $commitResult $?
        if echo $commitResult | grep "nothing to commit, working tree clean"; then
          echo "No changes to the static site. Existing without asset deployment."
          exit 0
        fi
        git push origin HEAD
        gh pr create --title "Automatic PR $releaseDate" --body "This pull request was automatically created from ${{ github.server_url }}/krmckone/lk-site/actions/runs/${{ github.run_id }}. This release is based on krmckone/lk-site@$lkSiteReleaseHash"
        gh pr merge --auto --rebase

